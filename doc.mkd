##git-count-one说明文档
###class:
* Time():时间类。
    * 变量：年，月，日，小时，分钟，秒。
    * 函数：
        * \_init\_:构造函数，6个参数和类的变量相对应，无返回。
        * set:给指定的对象设定值，6个参数和类的变量相对应，无返回。
        * diff:计算时间差（self-other）。需要一个Time类型的参数。忽略年月差，返回秒级别的时间差距。
        * show:打印出对象的变量值。无参数。无返回。   
       
###functions:
* `get_time_diff(time_list)`:一个list作为参数，list中为commit的时间信息。该函数用于计算commit的时间差量。返回一个list。在`get_commit_dic`中调用。
* `get_commit_dic`:不需要参数。该函数用于得到commit和对应time的时间表(dic)。返回一个dic格式为
`{0: ['0b99d6054c6689ed0b474c011a9f25efbbf56505', 419975],... ，25['683b9120adf1f20d1b30dedba6acf10d7d402b81', -1]}`。在主程序中调用。
* `is_merge(commit_sha)`:一个参数，commit的hash值。该函数用于检查该commit是否包含合并分支，包含返回`True`，不包含返回`False`。在`collect_stats(commit_list)`中调用。
* `collect_stats(commit_list)`:一个参数，commit的hash列表。该函数用于计算每次commit的代码改变量。在主程序中调用。

###git command:
* `git log`:列出当前仓库的所有commit信息，用于收集commit和对应的time。**在命令输出中commit按时间排序，最近的commit，最先列出**
    * `git log --pretty=oneline`   
* `git show --oneline [commit_sha]`:列出一次commit的具体信息非常详细。其中包含了merge信息。
* `git show -s --format=%an [commit_sha]`:列出这次commit的提交者
* `git diff --shortstat [commit_sha] [commit_sha]`:列出两次commit之间的变化。用于计算每次commit的代码改变量。

###其他
代码中忽略了所有merge的commit和那些一分钟代码量大于一行的commit。


###问题
* git log会列出rollback的commit值，这会导致commit的数目与time的数目对不上。
    *  目前已经解决


